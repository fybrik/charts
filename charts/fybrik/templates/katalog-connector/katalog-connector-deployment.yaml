{{- $autoFlag := and .Values.coordinator.enabled (eq .Values.coordinator.catalog "katalog") }}
{{- if include "fybrik.isEnabled" (tuple .Values.katalogConnector.enabled $autoFlag) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: katalog-connector
  labels:
    app.kubernetes.io/component: katalog-connector
    {{- include "fybrik.labels" . | nindent 4 }}
spec:
  {{- if not .Values.katalogConnector.autoscaling.enabled }}
  replicas: {{ .Values.katalogConnector.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/component: katalog-connector
      {{- include "fybrik.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.katalogConnector.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        fybrik.io/componentType: connector
        app.kubernetes.io/component: katalog-connector
        {{- include "fybrik.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.katalogConnector.serviceAccount.name }}
      securityContext:
      {{- include "fybrik.processPodSecurityContext" (dict "context" . "podSecurityContext" .Values.katalogConnector.podSecurityContext) | nindent 8 }}
      containers:
        - name: katalog-connector
          securityContext:
            {{- mergeOverwrite (deepCopy .Values.global.containerSecurityContext) .Values.katalogConnector.containerSecurityContext | toYaml | nindent 12 }}
          image: {{ include "fybrik.image" ( tuple $ .Values.katalogConnector ) }}
          imagePullPolicy: {{ .Values.katalogConnector.imagePullPolicy | default .Values.global.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.katalogConnector.resources | nindent 12 }}
          env:
            - name: SERVICE_PORT
              value: {{ .Values.katalogConnector.service.port | quote }}
            - name: PRETTY_LOGGING
              value: {{ .Values.global.prettyLogging | quote }}
            - name: LOGGING_VERBOSITY
              value: {{ .Values.global.loggingVerbosity | quote }}
            - name: USE_TLS
              value: {{ .Values.katalogConnector.tls.use_tls | quote | toString }}
            - name: USE_MTLS
              value: {{ .Values.katalogConnector.tls.use_mtls | quote | toString }}
            - name: CERT_SECRET_NAME
              value: {{ .Values.katalogConnector.tls.certs.certSecretName }}
            - name: CERT_SECRET_NAMESPACE
              value: {{ .Values.katalogConnector.tls.certs.certSecretNamespace }}
            - name: CACERT_SECRET_NAME
              value: {{ .Values.katalogConnector.tls.certs.cacertSecretName }}
            - name: CACERT_SECRET_NAMESPACE
              value: {{ .Values.katalogConnector.tls.certs.cacertSecretNamespace }}

      {{- with .Values.katalogConnector.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.katalogConnector.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.katalogConnector.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
